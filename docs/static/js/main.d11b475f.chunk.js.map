{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAK3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OAEO,sBAAMC,SAhBQ,SAAEC,GACnBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAUf,SACA,uBACKO,KAAK,OACLC,MAAQT,EACRU,SAxBc,SAAEP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCVdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCF,EAFpC,gEAGAG,MAAOD,GAHP,cAGbE,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVvB,kBAgBZK,GAhBY,4CAAH,sDCCXO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAGlC,OACI,sBAAKa,UAAU,wCAAf,UACG,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,kCAAMA,SCHJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA8BA,OAzBHC,qBAAW,WAERvB,EAASC,GACJuB,MAAM,SAAAC,GAGPH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAMlB,CAAEnB,IAWMoB,ED7B0BK,CAAczB,GAAlCY,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAMrB,OACK,qCACD,qBAAIJ,UAAU,oCAAd,cAAqDf,KAEnDmB,GAAW,mBAAGJ,UAAU,mCAAb,qBAIb,qBAAKA,UAAU,YAAf,SAIoBH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEkB1BgB,EAxCM,WAEjB,MAAsCxC,mBAAS,CAAC,iBAAhD,mBAAQyC,EAAR,KAAoB1C,EAApB,KAeA,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAIA,6BAEI0C,EAAWnB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAaA,GADLA,Y,MC3B5B4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.d11b475f.chunk.js","sourcesContent":["import React, {useState}  from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handlesubmit = ( e ) => {\r\n        e.preventDefault()\r\n\r\n        // console.log('submit done')\r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n            \r\n        }\r\n       \r\n\r\n       \r\n    }\r\n\r\n    return (\r\n         \r\n           <form onSubmit={ handlesubmit }>\r\n           <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />   \r\n               \r\n            </form> \r\n           \r\n        \r\n    )\r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\n    export const getGifs = async( category) => {\r\n\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ category } &limit=10&api_key=X4ABJN7Dga410Q8fcBrs5GIhDiR6b1h9`\r\n        const resp = await fetch( url );\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        }\r\n\r\n        )\r\n\r\n        return gifs;\r\n        \r\n\r\n\r\n    }","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    /* console.log(id, title, url) */\r\n    return (\r\n        <div className=\"card animate__animated animate__flash\">\r\n           <img src={ url } alt={ title } />\r\n           <p> { title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n import { GifGridItem } from './GifGridItem'\r\n\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n    \r\n\r\n\r\n   \r\n\r\n    return (\r\n         <>   \r\n        <h3 className=\"animate__animated animate__fadeIn\"> { category }</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>  }\r\n\r\n       \r\n\r\n        <div className=\"card-grid\">\r\n                \r\n                    \r\n                        {\r\n                            images.map( img =>(\r\n                                <GifGridItem \r\n                                key={img.id}\r\n                                {...img }\r\n                                />\r\n                            ))\r\n                        }\r\n                    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n  \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n useEffect (()=>{\r\n\r\n    getGifs( category )\r\n        .then( imgs =>{\r\n\r\n        \r\n        setState({\r\n            data: imgs,\r\n            loading: false\r\n        })\r\n  \r\n            \r\n        } )\r\n\r\n },[ category ])\r\n\r\n\r\n   /*  setTimeout( () => {\r\n        setstate({\r\n            data: [1,2,3,4,5,6,7],\r\n        loading: false,\r\n        })\r\n        \r\n    }, 3000); */\r\n\r\n    return state; // { data: [], loading: true, }\r\n\r\n\r\n}\r\n\r\n\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [ categories, setCategories ] = useState(['rick y morty']);\r\n\r\n/*    // const categories = ['x', 'x2', 'x3', 'z']\r\n\r\n  \r\n\r\n   const handleAdd = () => {\r\n\r\n   //setCategories(['n',...categories]);    ---> operador spread  \" ...categories \"\r\n   setCategories( cats => [...categories, 'n'] );   // ---> arrow function para agregar a una const\r\n   \r\n\r\n   }\r\n   console.log(categories) */\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp </h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            \r\n\r\n           \r\n            <ol>\r\n                { \r\n                categories.map( category => (\r\n                    <GifGrid \r\n                    key = { category }\r\n                    category = { category }\r\n                    />\r\n                ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n    \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}